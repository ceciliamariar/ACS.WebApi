// <auto-generated />
using System;
using ACS.WebApi.BaseDados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ACS.WebApi.BaseDados.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasMaxLength(100);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Cidade")
                        .HasMaxLength(100);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataUltimaAtulizacao");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200);

                    b.Property<string>("GeoLocalizacao")
                        .HasMaxLength(1000);

                    b.Property<int>("IdUsuarioUltimaAtualicao");

                    b.Property<int>("Numero");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioUltimaAtualicao");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.Medicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentario")
                        .HasMaxLength(500);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataHora");

                    b.Property<DateTime>("DataUltimaAtulizacao");

                    b.Property<int>("FC");

                    b.Property<int>("IdPaciente");

                    b.Property<int>("IdResponsavelCadastro");

                    b.Property<int>("IdUsuarioUltimaAtualicao");

                    b.Property<int>("PAdist");

                    b.Property<int>("PAsist");

                    b.Property<bool>("Pedido");

                    b.Property<bool>("Rotina");

                    b.Property<bool>("Validado");

                    b.HasKey("Id");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdResponsavelCadastro");

                    b.HasIndex("IdUsuarioUltimaAtualicao");

                    b.ToTable("Medicoes");
                });

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime?>("DataNascimento");

                    b.Property<DateTime>("DataUltimaAtulizacao");

                    b.Property<int>("IdEndereco");

                    b.Property<int>("IdUsuario");

                    b.Property<int>("IdUsuarioUltimaAtualicao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)))
                        .HasMaxLength(1);

                    b.Property<string>("Telefone")
                        .HasMaxLength(14);

                    b.HasKey("Id");

                    b.HasIndex("IdEndereco");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IdUsuarioUltimaAtualicao");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.PacienteRemedio", b =>
                {
                    b.Property<int>("IdPaciente");

                    b.Property<int>("IdRemedio");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataInicio");

                    b.Property<DateTime>("DataUltimaAtulizacao");

                    b.Property<DateTime>("DataVisita");

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<int>("IdUsuarioUltimaAtualicao");

                    b.HasKey("IdPaciente", "IdRemedio");

                    b.HasIndex("IdRemedio");

                    b.HasIndex("IdUsuarioUltimaAtualicao");

                    b.ToTable("PacientesRemedios");
                });

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.Pergunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataUltimaAtulizacao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("IdUsuarioUltimaAtualicao");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioUltimaAtualicao");

                    b.ToTable("Perguntas");
                });

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.Remedio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataUltimaAtulizacao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("IdUsuarioUltimaAtualicao");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioUltimaAtualicao");

                    b.ToTable("Remedios");
                });

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.Resposta", b =>
                {
                    b.Property<int>("IdPaciente");

                    b.Property<int>("IdPergunta");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataInicio");

                    b.Property<DateTime>("DataUltimaAtulizacao");

                    b.Property<DateTime>("DataVisita");

                    b.Property<int>("IdResponsavelCadastro");

                    b.Property<int>("IdUsuarioUltimaAtualicao");

                    b.Property<bool>("Respost");

                    b.Property<bool>("Validado");

                    b.HasKey("IdPaciente", "IdPergunta");

                    b.HasIndex("IdPergunta");

                    b.HasIndex("IdResponsavelCadastro");

                    b.HasIndex("IdUsuarioUltimaAtualicao");

                    b.ToTable("Respostas");
                });

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataUltimaAtulizacao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("IdUsuarioResponsavel");

                    b.Property<int>("IdUsuarioUltimaAtualicao");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("Perfil");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("TipoPessoa");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioResponsavel");

                    b.HasIndex("IdUsuarioUltimaAtualicao");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.Endereco", b =>
                {
                    b.HasOne("ACS.WebApi.Dominio.Entidades.Usuario", "UsuarioUltimaAtualizacao")
                        .WithMany()
                        .HasForeignKey("IdUsuarioUltimaAtualicao")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.Medicao", b =>
                {
                    b.HasOne("ACS.WebApi.Dominio.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ACS.WebApi.Dominio.Entidades.Usuario", "UsuarioResponsavelCadastro")
                        .WithMany()
                        .HasForeignKey("IdResponsavelCadastro")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ACS.WebApi.Dominio.Entidades.Usuario", "UsuarioUltimaAtualizacao")
                        .WithMany()
                        .HasForeignKey("IdUsuarioUltimaAtualicao")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.Paciente", b =>
                {
                    b.HasOne("ACS.WebApi.Dominio.Entidades.Endereco", "Endereco")
                        .WithMany("Pacientes")
                        .HasForeignKey("IdEndereco")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ACS.WebApi.Dominio.Entidades.Usuario", "UsuarioResponsavel")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ACS.WebApi.Dominio.Entidades.Usuario", "UsuarioUltimaAtualizacao")
                        .WithMany()
                        .HasForeignKey("IdUsuarioUltimaAtualicao")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.PacienteRemedio", b =>
                {
                    b.HasOne("ACS.WebApi.Dominio.Entidades.Paciente", "Paciente")
                        .WithMany("PacienteRemedios")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ACS.WebApi.Dominio.Entidades.Remedio", "Remedio")
                        .WithMany("PacientesRemedio")
                        .HasForeignKey("IdRemedio")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ACS.WebApi.Dominio.Entidades.Usuario", "UsuarioUltimaAtualizacao")
                        .WithMany()
                        .HasForeignKey("IdUsuarioUltimaAtualicao")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.Pergunta", b =>
                {
                    b.HasOne("ACS.WebApi.Dominio.Entidades.Usuario", "UsuarioUltimaAtualizacao")
                        .WithMany()
                        .HasForeignKey("IdUsuarioUltimaAtualicao")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.Remedio", b =>
                {
                    b.HasOne("ACS.WebApi.Dominio.Entidades.Usuario", "UsuarioUltimaAtualizacao")
                        .WithMany()
                        .HasForeignKey("IdUsuarioUltimaAtualicao")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.Resposta", b =>
                {
                    b.HasOne("ACS.WebApi.Dominio.Entidades.Paciente", "Paciente")
                        .WithMany("Respostas")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ACS.WebApi.Dominio.Entidades.Pergunta", "Pergunta")
                        .WithMany("Respostas")
                        .HasForeignKey("IdPergunta")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ACS.WebApi.Dominio.Entidades.Usuario", "UsuarioResponsavelCadastro")
                        .WithMany()
                        .HasForeignKey("IdResponsavelCadastro")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ACS.WebApi.Dominio.Entidades.Usuario", "UsuarioUltimaAtualizacao")
                        .WithMany()
                        .HasForeignKey("IdUsuarioUltimaAtualicao")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ACS.WebApi.Dominio.Entidades.Usuario", b =>
                {
                    b.HasOne("ACS.WebApi.Dominio.Entidades.Usuario", "UsuarioResponsavel")
                        .WithMany()
                        .HasForeignKey("IdUsuarioResponsavel")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ACS.WebApi.Dominio.Entidades.Usuario", "UsuarioUltimaAtualizacao")
                        .WithMany()
                        .HasForeignKey("IdUsuarioUltimaAtualicao")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
